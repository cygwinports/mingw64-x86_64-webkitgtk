--- origsrc/webkitgtk-2.2.8/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp	2014-10-01 01:33:55.000000000 -0500
+++ src/webkitgtk-2.2.8/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp	2015-11-27 12:42:51.787136900 -0600
@@ -348,7 +348,7 @@ static void webKitWebSrcSetProperty(GObj
 
     switch (propID) {
     case PROP_IRADIO_MODE: {
-        GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+        WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
         priv->iradioMode = g_value_get_boolean(value);
         break;
     }
@@ -370,7 +370,7 @@ static void webKitWebSrcGetProperty(GObj
     WebKitWebSrc* src = WEBKIT_WEB_SRC(object);
     WebKitWebSrcPrivate* priv = src->priv;
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     switch (propID) {
     case PROP_IRADIO_MODE:
         g_value_set_boolean(value, priv->iradioMode);
@@ -423,7 +423,7 @@ static gboolean webKitWebSrcStop(WebKitW
 
     ASSERT(isMainThread());
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
 
     bool seeking = priv->seekID;
 
@@ -484,7 +484,7 @@ static gboolean webKitWebSrcStart(WebKit
 
     ASSERT(isMainThread());
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
 
     priv->startID = 0;
 
@@ -581,7 +581,7 @@ static GstStateChangeReturn webKitWebSrc
         return ret;
     }
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     switch (transition) {
     case GST_STATE_CHANGE_READY_TO_PAUSED:
         GST_DEBUG_OBJECT(src, "READY->PAUSED");
@@ -612,7 +612,7 @@ static gboolean webKitWebSrcQueryWithPar
         gst_query_parse_duration(query, &format, NULL);
 
         GST_DEBUG_OBJECT(src, "duration query in format %s", gst_format_get_name(format));
-        GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+        WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
         if (format == GST_FORMAT_BYTES && src->priv->size > 0) {
             gst_query_set_duration(query, format, src->priv->size);
             result = TRUE;
@@ -620,7 +620,7 @@ static gboolean webKitWebSrcQueryWithPar
         break;
     }
     case GST_QUERY_URI: {
-        GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+        WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
         gst_query_set_uri(query, src->priv->uri);
         result = TRUE;
         break;
@@ -665,7 +665,7 @@ static gchar* webKitWebSrcGetUri(GstURIH
     WebKitWebSrc* src = WEBKIT_WEB_SRC(handler);
     gchar* ret;
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     ret = g_strdup(src->priv->uri);
     return ret;
 }
@@ -680,7 +680,7 @@ static gboolean webKitWebSrcSetUri(GstUR
         return FALSE;
     }
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
 
     g_free(priv->uri);
     priv->uri = 0;
@@ -716,7 +716,7 @@ static const gchar* webKitWebSrcGetUri(G
     WebKitWebSrc* src = WEBKIT_WEB_SRC(handler);
     gchar* ret;
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     ret = g_strdup(src->priv->uri);
     return ret;
 }
@@ -731,7 +731,7 @@ static gboolean webKitWebSrcSetUri(GstUR
         return FALSE;
     }
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
 
     g_free(priv->uri);
     priv->uri = 0;
@@ -769,7 +769,7 @@ static gboolean webKitWebSrcNeedDataMain
 
     ASSERT(isMainThread());
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     // already stopped
     if (!priv->needDataID)
         return FALSE;
@@ -790,7 +790,7 @@ static void webKitWebSrcNeedDataCb(GstAp
 
     GST_DEBUG_OBJECT(src, "Need more data: %u", length);
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     if (priv->needDataID || !priv->paused) {
         return;
     }
@@ -804,7 +804,7 @@ static gboolean webKitWebSrcEnoughDataMa
 
     ASSERT(isMainThread());
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     // already stopped
     if (!priv->enoughDataID)
         return FALSE;
@@ -825,7 +825,7 @@ static void webKitWebSrcEnoughDataCb(Gst
 
     GST_DEBUG_OBJECT(src, "Have enough data");
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     if (priv->enoughDataID || priv->paused) {
         return;
     }
@@ -839,7 +839,7 @@ static gboolean webKitWebSrcSeekMainCb(W
 
     ASSERT(isMainThread());
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     // already stopped
     if (!priv->seekID)
         return FALSE;
@@ -857,7 +857,7 @@ static gboolean webKitWebSrcSeekDataCb(G
     WebKitWebSrcPrivate* priv = src->priv;
 
     GST_DEBUG_OBJECT(src, "Seeking to offset: %" G_GUINT64_FORMAT, offset);
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     if (offset == priv->offset && priv->requestedOffset == priv->offset)
         return TRUE;
 
@@ -876,7 +876,7 @@ static gboolean webKitWebSrcSeekDataCb(G
 void webKitWebSrcSetMediaPlayer(WebKitWebSrc* src, WebCore::MediaPlayer* player)
 {
     ASSERT(player);
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     src->priv->player = player;
 }
 
@@ -902,7 +902,7 @@ char* StreamingClient::createReadBuffer(
     mapGstBuffer(buffer);
 #endif
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     priv->buffer = adoptGRef(buffer);
     locker.unlock();
 
@@ -917,7 +917,7 @@ void StreamingClient::handleResponseRece
 
     GST_DEBUG_OBJECT(src, "Received response: %d", response.httpStatusCode());
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
 
     // If we seeked we need 206 == PARTIAL_CONTENT
     if (priv->requestedOffset && response.httpStatusCode() != 206) {
@@ -1016,7 +1016,7 @@ void StreamingClient::handleDataReceived
     WebKitWebSrc* src = WEBKIT_WEB_SRC(m_src.get());
     WebKitWebSrcPrivate* priv = src->priv;
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
 
     GST_LOG_OBJECT(src, "Have %d bytes of data", priv->buffer ? getGstBufferSize(priv->buffer.get()) : length);
 
@@ -1070,7 +1070,7 @@ void StreamingClient::handleNotifyFinish
 
     GST_DEBUG_OBJECT(src, "Have EOS");
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     if (!priv->seekID) {
         locker.unlock();
         gst_app_src_end_of_stream(priv->appsrc);
@@ -1203,7 +1203,7 @@ void ResourceHandleStreamingClient::wasB
 
     GST_ERROR_OBJECT(src, "Request was blocked");
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     uri.set(g_strdup(src->priv->uri));
     locker.unlock();
 
@@ -1217,7 +1217,7 @@ void ResourceHandleStreamingClient::cann
 
     GST_ERROR_OBJECT(src, "Cannot show URL");
 
-    GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
+    WebCore::GMutexLocker locker(GST_OBJECT_GET_LOCK(src));
     uri.set(g_strdup(src->priv->uri));
     locker.unlock();
 
